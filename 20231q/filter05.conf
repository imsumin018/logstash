input {
  file  {
    path => "/Users/s/dev3/ons_logs/message03/N779XY-LOG-SYSTEM-messages-20211001-155001.log"
    sincedb_path => "NUL"
    start_position => "beginning"
  }
}
filter {
        grok { 
        		match => { "message" => [
				'\A%{TIMESTAMP_ISO8601:timeinfo} %{TIMESTAMP_ISO8601:timeinfo_client} %{IPV4:client_ip} \[%{JAVAMETHOD:appID}-%{WORD:message_level}] %{JAVAFILE:service_name}: %{JAVALOGMESSAGE:msg01}'
        		] }
				remove_field => ["message"]
        }

        if [msg01] =~ "<CmdResult" {
        	xml {
		        source => "msg01"
   	            store_xml => true
   	            target => "CmdResult"
  				remove_namespaces => true 
		    }
		 	mutate { 
		 		replace => { "obeds_id" => "%{[CmdResult][MsgId][0]}"
						"link_label" => "%{[CmdResult][Cmd][0][LinkLabel][0]}"
						"appID2" => "%{[CmdResult][Cmd][0][AppId][0]}"
						"data_type" => "%{[CmdResult][Cmd][0][DataType][0]}"
						"airplaine_id" => "%{[CmdResult][AirplaneId][0]}"
		 	 	}
		 	}
		 	mutate {
		 		remove_field => ["CmdResult"]
		 	}
	    } 
        
        if [msg01] =~ "file downlink" {
        	dissect { mapping => { "msg01" => "[OBEDS-INFO]: finished file downlink - %{obeds_id}, %{time_taken} seconds, %{size} bytes, %{file_name}" } }
        	mutate {
        		convert => ["[time_taken]","float"]
        		convert => ["[size]","integer"]
        		split => { "file_name" => "_" }
        		add_field => { "airplaine_id" => "%{[file_name][0]}" }
        		add_field => { "appID2" => "%{[file_name][1]}" }
        		add_field => { "data_type" => "%{[file_name][2]}" }
        	}
        }       
        if [service_name] == "AID-WWU" {
			kv {
				include_brackets => false
				source => "msg01"
				field_split_pattern => ",|\s+"
				value_split => "="
			}
            mutate {
                convert => ["[cellBand]","integer"]
                convert => ["[linkSpeedRx]","integer"]
                convert => ["[upTime]","integer"]
                convert => ["[linkSpeedTx]","integer"]
                convert => ["[signalStrength]","integer"]
				convert => ["[navLatitude]","float"]
				convert => ["[navLongitude]","float"]
			}
		}
		
        if [location] { mutate { remove_field => ["location"]}}
		if [navLongitude] {
			mutate {
				add_field => {
                    "[location][lat]" => "%{navLatitude}"
                    "[location][lon]" => "%{navLongitude}"
              }
				#remove_field => ["navLatitude", "navLongitude", "msg01"]
				#convert => ["[location][lat]","float"]
				#convert => ["[location][lon]","float"]
			}
		}
		mutate {
    		remove_field => ["host", "@timestamp", "msg01", "client_ip", "event", "file_name"]
		}
}
output {
	#if [obeds_id] or [navLatitude]  {
	#if [msg01] =~ "file downlink" or [msg01] =~"<CmdResult" or [msg01] =~ "navLatitude" {
	#if [navLatitude]
	if [obeds_id] {
		stdout { codec => rubydebug }
	
		elasticsearch {
			document_id => "%{obeds_id}"
    		action => 'update'
   		 	doc_as_upsert => true
		}
	}
}
